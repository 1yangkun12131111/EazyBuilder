(this.webpackJsonp=this.webpackJsonp||[]).push([[45],{"+YT9":function(e,i){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"TimelogFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Timelog"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"timeSpent"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"user"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"spentAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"note"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"body"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:106}};n.loc.source={body:"fragment TimelogFragment on Timelog {\n  timeSpent\n  user {\n    name\n  }\n  spentAt\n  note {\n    body\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=n},"+ooC":function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"issueSetAssignees"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"assigneeUsernames"}},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetAssignees"},name:{kind:"Name",value:"issueSetAssignees"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"assigneeUsernames"},value:{kind:"Variable",name:{kind:"Name",value:"assigneeUsernames"}}},{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:504}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nmutation issueSetAssignees($iid: String!, $assigneeUsernames: [String!]!, $fullPath: ID!) {\n  issuableSetAssignees: issueSetAssignees(\n    input: { iid: $iid, assigneeUsernames: $assigneeUsernames, projectPath: $fullPath }\n  ) {\n    issuable: issue {\n      id\n      assignees {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function s(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(s(n("aBoS").definitions)),a.definitions=a.definitions.concat(s(n("6u3F").definitions));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issueSetAssignees=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,s=new Set;for(a.forEach((function(e){s.add(e)}));s.size>0;){var o=s;s=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){s.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"issueSetAssignees")},"2kmU":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateEpic"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEpicInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetConfidential"},name:{kind:"Name",value:"updateEpic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidential"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:175}};n.loc.source={body:"mutation updateEpic($input: UpdateEpicInput!) {\n  issuableSetConfidential: updateEpic(input: $input) {\n    issuable: epic {\n      id\n      confidential\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.updateEpic=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"updateEpic")},"6u3F":function(e,i){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"UserAvailability"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"User"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"availability"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:70}};n.loc.source={body:"fragment UserAvailability on User {\n  status {\n    availability\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=n},"79Bm":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateIssueDueDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateIssueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetDate"},name:{kind:"Name",value:"updateIssue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDate"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:173}};n.loc.source={body:"mutation updateIssueDueDate($input: UpdateIssueInput!) {\n  issuableSetDate: updateIssue(input: $input) {\n    issuable: issue {\n      id\n      dueDate\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.updateIssueDueDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"updateIssueDueDate")},"7VPc":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueSubscribed"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscribed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"emailsDisabled"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:222}};n.loc.source={body:"query issueSubscribed($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    issuable: issue(iid: $iid) {\n      __typename\n      id\n      subscribed\n      emailsDisabled\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueSubscribed=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueSubscribed")},"9iFO":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueReference"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"reference"},arguments:[{kind:"Argument",name:{kind:"Name",value:"full"},value:{kind:"BooleanValue",value:!0}}],directives:[]}]}}]}}]}}],loc:{start:0,end:211}};n.loc.source={body:"query issueReference($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    issuable: issue(iid: $iid) {\n      __typename\n      id\n      reference(full: true)\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueReference=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueReference")},BaNG:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicDueDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateIsFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateFromMilestones"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:255}};n.loc.source={body:"query epicDueDate($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    __typename\n    issuable: epic(iid: $iid) {\n      __typename\n      id\n      dueDate\n      dueDateIsFixed\n      dueDateFixed\n      dueDateFromMilestones\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.epicDueDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"epicDueDate")},H3X6:function(e,i,n){"use strict";n.d(i,"a",(function(){return de})),n.d(i,"b",(function(){return re})),n.d(i,"g",(function(){return oe})),n.d(i,"c",(function(){return le})),n.d(i,"h",(function(){return ue})),n.d(i,"e",(function(){return ce})),n.d(i,"d",(function(){return me})),n.d(i,"j",(function(){return fe})),n.d(i,"f",(function(){return ve})),n.d(i,"i",(function(){return ke})),n.d(i,"k",(function(){return pe}));var a=n("xk0s"),t=n("HTua"),s=n.n(t),d=n("BaNG"),r=n.n(d),o=n("LQaz"),l=n.n(o),u=n("pEZO"),c=n.n(u),m=n("bS9M"),f=n.n(m),v=n("RcPc"),k=n.n(v),p=n("ISm6"),h=n.n(p),S=n("zKHu"),g=n.n(S),b=n("9iFO"),N=n.n(b),y=n("7VPc"),D=n.n(y),w=n("ZqG5"),E=n.n(w),F=n("ZGli"),T=n.n(F),_=n("2kmU"),O=n.n(_),V=n("Udsl"),P=n.n(V),q=n("HwQc"),x=n.n(q),j=n("7+7h"),I=n.n(j),$=n("a5E7"),R=n.n($),C=n("79Bm"),A=n.n(C),U=n("VnNw"),H=n.n(U),L=n("ScWj"),B=n.n(L),G=n("Okhk"),M=n.n(G),z=n("X/rp"),Q=n.n(z),Z=n("cioq"),X=n.n(Z),J=n("zZPN"),Y=n.n(J),K=n("qVdt"),W=n.n(K),ee=n("gc4y"),ie=n.n(ee),ne=n("+ooC"),ae=n.n(ne),te=n("aLi5"),se=n.n(te);const de=250,re={[a.c.Issue]:{query:M.a,subscription:k.a,mutation:ae.a},[a.c.MergeRequest]:{query:Y.a,mutation:se.a}},oe={[a.c.Issue]:{query:Q.a},[a.c.MergeRequest]:{query:W.a},[a.c.Epic]:{query:l.a}},le={[a.c.Issue]:{query:h.a,mutation:R.a},[a.c.Epic]:{query:s.a,mutation:O.a}},ue={[a.c.Issue]:{query:N.a},[a.c.MergeRequest]:{query:E.a}},ce={start:"startDate",due:"dueDate"},me={[ce.start]:{isDateFixed:"startDateIsFixed",dateFixed:"startDateFixed",dateFromMilestones:"startDateFromMilestones"},[ce.due]:{isDateFixed:"dueDateIsFixed",dateFixed:"dueDateFixed",dateFromMilestones:"dueDateFromMilestones"}},fe={[a.c.Issue]:{query:D.a,mutation:H.a},[a.c.Epic]:{query:f.a,mutation:I.a},[a.c.MergeRequest]:{query:T.a,mutation:B.a}},ve={[a.c.Issue]:{query:g.a,mutation:A.a},[a.c.Epic]:{query:r.a,mutation:P.a}},ke={[a.c.Epic]:{query:c.a,mutation:x.a}},pe={[a.c.Issue]:{query:X.a},[a.c.MergeRequest]:{query:ie.a}}},HTua:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicConfidential"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidential"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:197}};n.loc.source={body:"query epicConfidential($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    __typename\n    issuable: epic(iid: $iid) {\n      __typename\n      id\n      confidential\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.epicConfidential=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"epicConfidential")},HwQc:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateEpicStartDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEpicInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetDate"},name:{kind:"Name",value:"updateEpic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateIsFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateFromMilestones"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:231}};n.loc.source={body:"mutation updateEpicStartDate($input: UpdateEpicInput!) {\n  issuableSetDate: updateEpic(input: $input) {\n    issuable: epic {\n      id\n      startDateIsFixed\n      startDateFixed\n      startDateFromMilestones\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.updateEpicStartDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"updateEpicStartDate")},ISm6:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueConfidential"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidential"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:205}};n.loc.source={body:"query issueConfidential($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    issuable: issue(iid: $iid) {\n      __typename\n      id\n      confidential\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueConfidential=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueConfidential")},"J6+Z":function(e,i,n){"use strict";var a=n("0zRR"),t=n("/Szx"),s=n("t8l0"),d=n("EQ0+"),r=n("rPnh"),o=n("BrvI"),l=n("9aS3"),u=n("Ddgg"),c=n("bvam"),m=t.a.extend({name:a.nb,mixins:[d.a],inject:{bvProgress:{default:function(){return{}}}},props:{value:{type:[Number,String],default:0},label:{type:String},labelHtml:{type:String},max:{type:[Number,String],default:null},precision:{type:[Number,String],default:null},variant:{type:String,default:function(){return Object(s.b)(a.nb,"variant")}},striped:{type:Boolean,default:null},animated:{type:Boolean,default:null},showProgress:{type:Boolean,default:null},showValue:{type:Boolean,default:null}},computed:{progressBarClasses:function(){return[this.computedVariant?"bg-".concat(this.computedVariant):"",this.computedStriped||this.computedAnimated?"progress-bar-striped":"",this.computedAnimated?"progress-bar-animated":""]},progressBarStyles:function(){return{width:this.computedValue/this.computedMax*100+"%"}},computedValue:function(){return Object(u.b)(this.value,0)},computedMax:function(){var e=Object(u.b)(this.max)||Object(u.b)(this.bvProgress.max,0);return e>0?e:100},computedPrecision:function(){return Object(l.b)(Object(u.c)(this.precision,Object(u.c)(this.bvProgress.precision,0)),0)},computedProgress:function(){var e=this.computedPrecision,i=Object(l.d)(10,e);return Object(u.a)(100*i*this.computedValue/this.computedMax/i,e)},computedVariant:function(){return this.variant||this.bvProgress.variant},computedStriped:function(){return Object(o.b)(this.striped)?this.striped:this.bvProgress.striped||!1},computedAnimated:function(){return Object(o.b)(this.animated)?this.animated:this.bvProgress.animated||!1},computedShowProgress:function(){return Object(o.b)(this.showProgress)?this.showProgress:this.bvProgress.showProgress||!1},computedShowValue:function(){return Object(o.b)(this.showValue)?this.showValue:this.bvProgress.showValue||!1}},render:function(e){var i,n=this.label,a=this.labelHtml,t=this.computedValue,s=this.computedPrecision,d={};return this.hasNormalizedSlot()?i=this.normalizeSlot():n||a?d=Object(r.a)(a,n):this.computedShowProgress?i=this.computedProgress:this.computedShowValue&&(i=Object(u.a)(t,s)),e("div",{staticClass:"progress-bar",class:this.progressBarClasses,style:this.progressBarStyles,attrs:{role:"progressbar","aria-valuemin":"0","aria-valuemax":Object(c.e)(this.computedMax),"aria-valuenow":Object(u.a)(t,s)},domProps:d},i)}}),f=t.a.extend({name:a.mb,mixins:[d.a],provide:function(){return{bvProgress:this}},props:{variant:{type:String,default:function(){return Object(s.b)(a.mb,"variant")}},striped:{type:Boolean,default:!1},animated:{type:Boolean,default:!1},height:{type:String},precision:{type:[Number,String],default:0},showProgress:{type:Boolean,default:!1},showValue:{type:Boolean,default:!1},max:{type:[Number,String],default:100},value:{type:[Number,String],default:0}},computed:{progressHeight:function(){return{height:this.height||null}}},render:function(e){var i=this.normalizeSlot();return i||(i=e(m,{props:{value:this.value,max:this.max,precision:this.precision,variant:this.variant,animated:this.animated,striped:this.striped,showProgress:this.showProgress,showValue:this.showValue}})),e("div",{class:["progress"],style:this.progressHeight},[i])}}),v=n("Pyw5");const k={components:{BProgress:f}};const p=n.n(v)()({render:function(){var e=this.$createElement;return(this._self._c||e)("b-progress",this._b({},"b-progress",this.$attrs,!1))},staticRenderFns:[]},void 0,k,void 0,!1,void 0,!1,void 0,void 0,void 0);i.a=p},LQaz:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicParticipants"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:413}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery epicParticipants($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    __typename\n    issuable: epic(iid: $iid) {\n      __typename\n      id\n      participants {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function s(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(s(n("aBoS").definitions)),a.definitions=a.definitions.concat(s(n("6u3F").definitions));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.epicParticipants=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,s=new Set;for(a.forEach((function(e){s.add(e)}));s.size>0;){var o=s;s=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){s.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"epicParticipants")},Okhk:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueAssignees"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:416}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery issueAssignees($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    issuable: issue(iid: $iid) {\n      __typename\n      id\n      assignees {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function s(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(s(n("aBoS").definitions)),a.definitions=a.definitions.concat(s(n("6u3F").definitions));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issueAssignees=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,s=new Set;for(a.forEach((function(e){s.add(e)}));s.size>0;){var o=s;s=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){s.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"issueAssignees")},Or2z:function(e,i,n){"use strict";n("orcL");var a=n("7xOh");const t=Object(a.a)();window.emitSidebarEvent=function(){return t.$emit(...arguments)},i.a=t},RcPc:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"subscription",name:{kind:"Name",value:"issuableAssigneesUpdated"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"issuableId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"IssuableID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"issuableAssigneesUpdated"},arguments:[{kind:"Argument",name:{kind:"Name",value:"issuableId"},value:{kind:"Variable",name:{kind:"Name",value:"issuableId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"InlineFragment",typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Issue"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"availability"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:337}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n\nsubscription issuableAssigneesUpdated($issuableId: IssuableID!) {\n  issuableAssigneesUpdated(issuableId: $issuableId) {\n    ... on Issue {\n      assignees {\n        nodes {\n          ...User\n          status {\n            availability\n          }\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("aBoS").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var s={};function d(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),s[e.name.value]=i}})),e.exports=a,e.exports.issuableAssigneesUpdated=function(e,i){var n={kind:e.kind,definitions:[d(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=s[i]||new Set,t=new Set,r=new Set;for(a.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(s[e]||new Set).forEach((function(e){r.add(e)})))}))}return t.forEach((function(i){var a=d(e,i);a&&n.definitions.push(a)})),n}(a,"issuableAssigneesUpdated")},ScWj:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"mergeRequestSetSubscription"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"subscribedState"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"updateIssuableSubscription"},name:{kind:"Name",value:"mergeRequestSetSubscription"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"subscribedState"},value:{kind:"Variable",name:{kind:"Name",value:"subscribedState"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscribed"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:325}};n.loc.source={body:"mutation mergeRequestSetSubscription($fullPath: ID!, $iid: String!, $subscribedState: Boolean!) {\n  updateIssuableSubscription: mergeRequestSetSubscription(\n    input: { projectPath: $fullPath, iid: $iid, subscribedState: $subscribedState }\n  ) {\n    issuable: mergeRequest {\n      id\n      subscribed\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.mergeRequestSetSubscription=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"mergeRequestSetSubscription")},Udsl:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateEpicDueDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEpicInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetDate"},name:{kind:"Name",value:"updateEpic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateIsFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDateFromMilestones"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:223}};n.loc.source={body:"mutation updateEpicDueDate($input: UpdateEpicInput!) {\n  issuableSetDate: updateEpic(input: $input) {\n    issuable: epic {\n      id\n      dueDateIsFixed\n      dueDateFixed\n      dueDateFromMilestones\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.updateEpicDueDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"updateEpicDueDate")},VnNw:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"issueSetSubscription"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"subscribedState"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"updateIssuableSubscription"},name:{kind:"Name",value:"issueSetSubscription"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"subscribedState"},value:{kind:"Variable",name:{kind:"Name",value:"subscribedState"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscribed"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:304}};n.loc.source={body:"mutation issueSetSubscription($fullPath: ID!, $iid: String!, $subscribedState: Boolean!) {\n  updateIssuableSubscription: issueSetSubscription(\n    input: { projectPath: $fullPath, iid: $iid, subscribedState: $subscribedState }\n  ) {\n    issuable: issue {\n      id\n      subscribed\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueSetSubscription=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueSetSubscription")},"X/rp":function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueParticipants"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:422}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery issueParticipants($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    issuable: issue(iid: $iid) {\n      __typename\n      id\n      participants {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function s(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(s(n("aBoS").definitions)),a.definitions=a.definitions.concat(s(n("6u3F").definitions));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issueParticipants=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,s=new Set;for(a.forEach((function(e){s.add(e)}));s.size>0;){var o=s;s=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){s.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"issueParticipants")},ZGli:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"mergeRequestSubscribed"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscribed"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:216}};n.loc.source={body:"query mergeRequestSubscribed($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    issuable: mergeRequest(iid: $iid) {\n      __typename\n      id\n      subscribed\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.mergeRequestSubscribed=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"mergeRequestSubscribed")},ZqG5:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"mergeRequestReference"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"reference"},arguments:[{kind:"Argument",name:{kind:"Name",value:"full"},value:{kind:"BooleanValue",value:!0}}],directives:[]}]}}]}}]}}],loc:{start:0,end:226}};n.loc.source={body:"query mergeRequestReference($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    issuable: mergeRequest(iid: $iid) {\n      __typename\n      id\n      reference(full: true)\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.mergeRequestReference=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"mergeRequestReference")},a5E7:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateIssueConfidential"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"IssueSetConfidentialInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetConfidential"},name:{kind:"Name",value:"issueSetConfidential"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidential"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:209}};n.loc.source={body:"mutation updateIssueConfidential($input: IssueSetConfidentialInput!) {\n  issuableSetConfidential: issueSetConfidential(input: $input) {\n    issuable: issue {\n      id\n      confidential\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.updateIssueConfidential=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"updateIssueConfidential")},aBoS:function(e,i){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"User"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"User"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatarUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]}]}}],loc:{start:0,end:70}};n.loc.source={body:"fragment User on User {\n  id\n  avatarUrl\n  name\n  username\n  webUrl\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=n},aLi5:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"mergeRequestSetAssignees"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"assigneeUsernames"}},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"mergeRequestSetAssignees"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"assigneeUsernames"},value:{kind:"Variable",name:{kind:"Name",value:"assigneeUsernames"}}},{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"mergeRequest"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:596}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nmutation mergeRequestSetAssignees($iid: String!, $assigneeUsernames: [String!]!, $fullPath: ID!) {\n  mergeRequestSetAssignees(\n    input: { iid: $iid, assigneeUsernames: $assigneeUsernames, projectPath: $fullPath }\n  ) {\n    mergeRequest {\n      id\n      assignees {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n      participants {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function s(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(s(n("aBoS").definitions)),a.definitions=a.definitions.concat(s(n("6u3F").definitions));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.mergeRequestSetAssignees=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,s=new Set;for(a.forEach((function(e){s.add(e)}));s.size>0;){var o=s;s=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){s.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"mergeRequestSetAssignees")},bS9M:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicSubscribed"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"emailsDisabled"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscribed"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:212}};n.loc.source={body:"query epicSubscribed($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    __typename\n    emailsDisabled\n    issuable: epic(iid: $iid) {\n      __typename\n      id\n      subscribed\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.epicSubscribed=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"epicSubscribed")},cioq:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"timeTrackingReport"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"IssueID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timelogs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"TimelogFragment"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:252}};a.loc.source={body:'#import "~/graphql_shared/fragments/issuable_timelogs.fragment.graphql"\n\nquery timeTrackingReport($id: IssueID!) {\n  issuable: issue(id: $id) {\n    __typename\n    id\n    title\n    timelogs {\n      nodes {\n        ...TimelogFragment\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("+YT9").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var s={};function d(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),s[e.name.value]=i}})),e.exports=a,e.exports.timeTrackingReport=function(e,i){var n={kind:e.kind,definitions:[d(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=s[i]||new Set,t=new Set,r=new Set;for(a.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(s[e]||new Set).forEach((function(e){r.add(e)})))}))}return t.forEach((function(i){var a=d(e,i);a&&n.definitions.push(a)})),n}(a,"timeTrackingReport")},gc4y:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"timeTrackingReport"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MergeRequestID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timelogs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"TimelogFragment"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:266}};a.loc.source={body:'#import "~/graphql_shared/fragments/issuable_timelogs.fragment.graphql"\n\nquery timeTrackingReport($id: MergeRequestID!) {\n  issuable: mergeRequest(id: $id) {\n    __typename\n    id\n    title\n    timelogs {\n      nodes {\n        ...TimelogFragment\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("+YT9").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var s={};function d(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),s[e.name.value]=i}})),e.exports=a,e.exports.timeTrackingReport=function(e,i){var n={kind:e.kind,definitions:[d(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=s[i]||new Set,t=new Set,r=new Set;for(a.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(s[e]||new Set).forEach((function(e){r.add(e)})))}))}return t.forEach((function(i){var a=d(e,i);a&&n.definitions.push(a)})),n}(a,"timeTrackingReport")},i3lA:function(e,i,n){"use strict";var a=n("EmJ/"),t=n.n(a),s=n("06tH"),d=n.n(s),r=n("nc9B"),o=n("XRO8"),l=n("2ibD"),u=n("/lV4");function c(){this.toggleTodo=this.toggleTodo.bind(this),this.sidebar=t()("aside"),this.removeListeners(),this.addEventListeners()}c.initialize=function(){this.instance||(this.instance=new c)},c.prototype.removeListeners=function(){this.sidebar.off("click",".sidebar-collapsed-icon"),this.sidebar.off("hidden.gl.dropdown"),this.sidebar.off("hiddenGlDropdown"),t()(".dropdown").off("loading.gl.dropdown"),t()(".dropdown").off("loaded.gl.dropdown"),t()(document).off("click",".js-sidebar-toggle")},c.prototype.addEventListeners=function(){const e=t()(document);return this.sidebar.on("click",".sidebar-collapsed-icon",this,this.sidebarCollapseClicked),this.sidebar.on("hidden.gl.dropdown",this,this.onSidebarDropdownHidden),this.sidebar.on("hiddenGlDropdown",this,this.onSidebarDropdownHidden),e.on("click",".js-sidebar-toggle",this.sidebarToggleClicked),t()(document).off("click",".js-issuable-todo").on("click",".js-issuable-todo",this.toggleTodo)},c.prototype.sidebarToggleClicked=function(e,i){const n=t()(this),a=t()(".js-sidebar-collapse"),s=t()(".js-sidebar-expand"),r=t()(".js-sidebar-toggle-container"),o=r.data("is-expanded"),l=o?Object(u.a)("Expand sidebar"):Object(u.a)("Collapse sidebar");e.preventDefault(),o?(r.data("is-expanded",!1),a.addClass("hidden"),s.removeClass("hidden"),t()("aside.right-sidebar").removeClass("right-sidebar-expanded").addClass("right-sidebar-collapsed"),t()(".layout-page").removeClass("right-sidebar-expanded").addClass("right-sidebar-collapsed")):(r.data("is-expanded",!0),s.addClass("hidden"),a.removeClass("hidden"),t()("aside.right-sidebar").removeClass("right-sidebar-collapsed").addClass("right-sidebar-expanded"),t()(".layout-page").removeClass("right-sidebar-collapsed").addClass("right-sidebar-expanded")),n.attr("data-original-title",l),i||d.a.set("collapsed_gutter",t()(".right-sidebar").hasClass("right-sidebar-collapsed"))},c.prototype.toggleTodo=function(e){var i=this;const n=t()(e.currentTarget),a=n.data("deletePath")?"delete":"post",s=String(n.data("deletePath")||n.data("createPath"));Object(r.d)(n),t()(".js-issuable-todo").disable().addClass("is-loading"),l.a[a](s,{issuable_id:n.data("issuableId"),issuable_type:n.data("issuableType")}).then((function(e){let{data:n}=e;i.todoUpdateDone(n)})).catch((function(){return Object(o.c)(Object(u.f)(Object(u.a)("There was an error %{message} todo."),{message:"post"===a?Object(u.e)("RightSidebar|adding a"):Object(u.e)("RightSidebar|deleting the")}))}))},c.prototype.todoUpdateDone=function(e){const i=e.delete_path?e.delete_path:null,n=i?"mark":"todo",a=t()(".js-issuable-todo");t()(document).trigger("todo:toggle",e.count),a.each((function(e,a){const s=t()(a),d=s.find(".js-issuable-todo-inner");s.removeClass("is-loading").enable().attr("aria-label",s.data("".concat(n,"Text"))).attr("title",s.data("".concat(n,"Text"))).data("deletePath",i),s.hasClass("has-tooltip")&&Object(r.c)(a),void 0!==s.data("isCollapsed")?d.html(s.data("".concat(n,"Icon"))):d.text(s.data("".concat(n,"Text")))}))},c.prototype.sidebarCollapseClicked=function(e){if(t()(e.currentTarget).hasClass("dont-change-state"))return;const i=e.data;e.preventDefault();const n=t()(this).closest(".block");return i.openDropdown(n)},c.prototype.openDropdown=function(e){const i="string"==typeof e?this.getBlock(e):e;this.isOpen()||(this.setCollapseAfterUpdate(i),this.toggleSidebar("open")),setTimeout((function(){i.find(".js-sidebar-dropdown-toggle").trigger("click")}))},c.prototype.setCollapseAfterUpdate=function(e){return e.addClass("collapse-after-update"),t()(".layout-page").addClass("with-overlay")},c.prototype.onSidebarDropdownHidden=function(e){const i=e.data;e.preventDefault();const n=t()(e.target).closest(".block");return i.sidebarDropdownHidden(n)},c.prototype.sidebarDropdownHidden=function(e){if(e.hasClass("collapse-after-update"))return e.removeClass("collapse-after-update"),t()(".layout-page").removeClass("with-overlay"),this.toggleSidebar("hide")},c.prototype.triggerOpenSidebar=function(){return this.sidebar.find(".js-sidebar-toggle").trigger("click")},c.prototype.toggleSidebar=function(e){if(null==e&&(e="toggle"),"toggle"===e&&this.triggerOpenSidebar(),"open"===e&&(this.isOpen()||this.triggerOpenSidebar()),"hide"===e&&this.isOpen())return this.triggerOpenSidebar()},c.prototype.isOpen=function(){return this.sidebar.is(".right-sidebar-expanded")},c.prototype.getBlock=function(e){return this.sidebar.find(".block.".concat(e))},i.a=c},pEZO:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicStartDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateIsFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateFixed"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDateFromMilestones"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:265}};n.loc.source={body:"query epicStartDate($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    __typename\n    issuable: epic(iid: $iid) {\n      __typename\n      id\n      startDate\n      startDateIsFixed\n      startDateFixed\n      startDateFromMilestones\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.epicStartDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"epicStartDate")},qVdt:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getMrParticipants"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:397}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery getMrParticipants($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    issuable: mergeRequest(iid: $iid) {\n      id\n      participants {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function s(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(s(n("aBoS").definitions)),a.definitions=a.definitions.concat(s(n("6u3F").definitions));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.getMrParticipants=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,s=new Set;for(a.forEach((function(e){s.add(e)}));s.size>0;){var o=s;s=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){s.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"getMrParticipants")},tyhI:function(e,i,n){"use strict";var a=n("s1D3"),t=n("MV2A"),s=n("1cpz"),d=n("XqDB"),r=n("/lV4"),o=n("Or2z"),l=n("LLbv"),u={name:"TimeTrackingCollapsedState",components:{GlIcon:a.a},directives:{GlTooltip:l.a},props:{showComparisonState:{type:Boolean,required:!0},showSpentOnlyState:{type:Boolean,required:!0},showEstimateOnlyState:{type:Boolean,required:!0},showNoTimeTrackingState:{type:Boolean,required:!0},timeSpentHumanReadable:{type:String,required:!1,default:""},timeEstimateHumanReadable:{type:String,required:!1,default:""}},computed:{divClass(){return this.showComparisonState?"compare":this.showEstimateOnlyState?"estimate-only":this.showSpentOnlyState?"spend-only":this.showNoTimeTrackingState?"no-tracking":""},spanClass(){return this.showComparisonState?"":this.showEstimateOnlyState||this.showSpentOnlyState?"bold":this.showNoTimeTrackingState?"no-value":""},text(){return this.showComparisonState?"".concat(this.timeSpentHumanReadable," / ").concat(this.timeEstimateHumanReadable):this.showEstimateOnlyState?"-- / ".concat(this.timeEstimateHumanReadable):this.showSpentOnlyState?"".concat(this.timeSpentHumanReadable," / --"):this.showNoTimeTrackingState?Object(r.a)("None"):""},timeTrackedTooltipText(){let e;return this.showComparisonState?e=Object(r.a)("Time remaining"):this.showEstimateOnlyState?e=Object(r.a)("Estimated"):this.showSpentOnlyState&&(e=Object(r.a)("Time spent")),Object(r.f)("%{title}: %{text}",{title:e,text:this.text})},tooltipText(){return this.showNoTimeTrackingState?Object(r.a)("Time tracking"):this.timeTrackedTooltipText}}},c=n("tBpV"),m=Object(c.a)(u,(function(){var e=this.$createElement,i=this._self._c||e;return i("div",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip:body.viewport.left",arg:"body",modifiers:{viewport:!0,left:!0}}],staticClass:"sidebar-collapsed-icon",attrs:{title:this.tooltipText,"data-testid":"collapsedState"}},[i("gl-icon",{attrs:{name:"timer"}}),this._v(" "),i("div",{staticClass:"time-tracking-collapsed-summary"},[i("div",{class:this.divClass},[i("span",{class:this.spanClass},[this._v(" "+this._s(this.text)+" ")])])])],1)}),[],!1,null,null,null).exports,f=n("J6+Z"),v=n("bOix"),k={name:"TimeTrackingComparisonPane",components:{GlProgressBar:f.a},directives:{GlTooltip:l.a},props:{timeSpent:{type:Number,required:!0},timeEstimate:{type:Number,required:!0},timeSpentHumanReadable:{type:String,required:!0},timeEstimateHumanReadable:{type:String,required:!0},limitToHours:{type:Boolean,required:!1,default:!1}},computed:{parsedTimeRemaining(){const e=this.timeEstimate-this.timeSpent;return Object(v.A)(e,{limitToHours:this.limitToHours})},timeRemainingHumanReadable(){return Object(v.E)(this.parsedTimeRemaining)},timeRemainingTooltip(){const{timeRemainingHumanReadable:e,timeRemainingMinutes:i}=this;return i<0?Object(r.f)(Object(r.e)("TimeTracking|Over by %{timeRemainingHumanReadable}"),{timeRemainingHumanReadable:e}):Object(r.f)(Object(r.e)("TimeTracking|Time remaining: %{timeRemainingHumanReadable}"),{timeRemainingHumanReadable:e})},timeRemainingMinutes(){return this.timeEstimate-this.timeSpent},timeRemainingPercent(){return Math.floor(this.timeSpent/this.timeEstimate*100)},timeRemainingStatusClass(){return this.timeEstimate>=this.timeSpent?"within_estimate":"over_estimate"},progressBarVariant(){return this.timeRemainingPercent>100?"danger":"primary"}}},p=Object(c.a)(k,(function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("div",{attrs:{"data-testid":"timeTrackingComparisonPane"}},[n("div",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip"}],staticClass:"compare-meter",class:e.timeRemainingStatusClass,attrs:{"data-testid":"compareMeter",title:e.timeRemainingTooltip}},[n("gl-progress-bar",{attrs:{"data-testid":"timeRemainingProgress",value:e.timeRemainingPercent,variant:e.progressBarVariant}}),e._v(" "),n("div",{staticClass:"compare-display-container"},[n("div",{staticClass:"compare-display float-left"},[n("span",{staticClass:"compare-label"},[e._v(e._s(e.s__("TimeTracking|Spent")))]),e._v(" "),n("span",{staticClass:"compare-value spent"},[e._v(e._s(e.timeSpentHumanReadable))])]),e._v(" "),n("div",{staticClass:"compare-display estimated float-right"},[n("span",{staticClass:"compare-label"},[e._v(e._s(e.s__("TimeTrackingEstimated|Est")))]),e._v(" "),n("span",{staticClass:"compare-value"},[e._v(e._s(e.timeEstimateHumanReadable))])])])],1)])}),[],!1,null,null,null).exports,h=n("4lAS"),S=n("3twG"),g={name:"TimeTrackingHelpState",components:{GlButton:h.a},computed:{href:()=>Object(S.p)(gon.relative_url_root||"","/help/user/project/time_tracking.md"),estimateText:()=>Object(r.f)(Object(r.e)("estimateCommand|%{slash_command} will update the estimated time with the latest command."),{slash_command:"<code>/estimate</code>"},!1),spendText:()=>Object(r.f)(Object(r.e)("spendCommand|%{slash_command} will update the sum of the time spent."),{slash_command:"<code>/spend</code>"},!1)}},b=Object(c.a)(g,(function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("div",{staticClass:"time-tracking-help-state",attrs:{"data-testid":"helpPane"}},[n("div",{staticClass:"time-tracking-info"},[n("h4",[e._v(e._s(e.__("Track time with quick actions")))]),e._v(" "),n("p",[e._v(e._s(e.__("Quick actions can be used in the issues description and comment boxes.")))]),e._v(" "),n("p",{domProps:{innerHTML:e._s(e.estimateText)}}),e._v(" "),n("p",{domProps:{innerHTML:e._s(e.spendText)}}),e._v(" "),n("gl-button",{attrs:{href:e.href}},[e._v(e._s(e.__("Learn more")))])],1)])}),[],!1,null,null,null).exports,N=n("FkSe"),y=n("znvU"),D=n("XRO8"),w=n("FxFN"),E=n("H3X6");var F={components:{GlLoadingIcon:N.a,GlTable:y.a},inject:["issuableId","issuableType"],props:{limitToHours:{type:Boolean,default:!1,required:!1}},data:()=>({report:[],isLoading:!0}),apollo:{report:{query(){return E.k[this.issuableType].query},variables(){return{id:Object(w.c)(this.getGraphQLEntityType(),this.issuableId)}},update(e){return this.isLoading=!1,this.extractTimelogs(e)},error(){Object(D.b)({message:Object(r.a)("Something went wrong. Please try again.")})}}},methods:{isIssue(){return"issue"===this.issuableType},getGraphQLEntityType(){return this.isIssue()?"Issue":"MergeRequest"},extractTimelogs(e){var i,n;return((null==e?void 0:null===(i=e.issuable)||void 0===i?void 0:null===(n=i.timelogs)||void 0===n?void 0:n.nodes)||[]).slice().sort((function(e,i){return new Date(e.spentAt)-new Date(i.spentAt)}))},formatDate:e=>Object(v.h)(e,'mmmm d, yyyy, HH:MM ("UTC:" o)'),getNote:e=>null==e?void 0:e.body,getTotalTimeSpent(){const e=this.report.reduce((function(e,i){return e+i.timeSpent}),0);return this.formatTimeSpent(e)},formatTimeSpent(e){return(e<0?"- ":"")+Object(v.E)(Object(v.A)(e,{limitToHours:this.limitToHours}))}},fields:[{key:"spentAt",label:Object(r.a)("Spent At"),sortable:!0},{key:"user",label:Object(r.a)("User"),sortable:!0},{key:"timeSpent",label:Object(r.a)("Time Spent"),sortable:!0},{key:"note",label:Object(r.a)("Note"),sortable:!0}]},T=Object(c.a)(F,(function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("div",[e.isLoading?n("div",[n("gl-loading-icon",{attrs:{size:"md"}})],1):n("gl-table",{attrs:{items:e.report,fields:e.$options.fields,"foot-clone":""},scopedSlots:e._u([{key:"cell(spentAt)",fn:function(i){var a=i.item.spentAt;return[n("div",[e._v(e._s(e.formatDate(a)))])]}},{key:"foot(spentAt)",fn:function(){return[e._v(" ")]},proxy:!0},{key:"cell(user)",fn:function(i){var a=i.item.user;return[n("div",[e._v(e._s(a.name))])]}},{key:"foot(user)",fn:function(){return[e._v(" ")]},proxy:!0},{key:"cell(timeSpent)",fn:function(i){var a=i.item.timeSpent;return[n("div",[e._v(e._s(e.formatTimeSpent(a)))])]}},{key:"foot(timeSpent)",fn:function(){return[n("div",[e._v(e._s(e.getTotalTimeSpent()))])]},proxy:!0},{key:"cell(note)",fn:function(i){var a=i.item.note;return[n("div",[e._v(e._s(e.getNote(a)))])]}},{key:"foot(note)",fn:function(){return[e._v(" ")]},proxy:!0}])})],1)}),[],!1,null,null,null).exports,_={name:"TimeTrackingSpentOnlyPane",props:{timeSpentHumanReadable:{type:String,required:!0}},computed:{timeSpent(){return Object(r.f)(Object(r.e)("TimeTracking|%{startTag}Spent: %{endTag}%{timeSpentHumanReadable}"),{startTag:'<span class="gl-font-weight-bold">',endTag:"</span>",timeSpentHumanReadable:this.timeSpentHumanReadable},!1)}}},O=Object(c.a)(_,(function(){var e=this.$createElement;return(this._self._c||e)("div",{attrs:{"data-testid":"spentOnlyPane"},domProps:{innerHTML:this._s(this.timeSpent)}})}),[],!1,null,null,null).exports,V={name:"IssuableTimeTracker",i18n:{noTimeTrackingText:Object(r.a)("No estimate or time spent"),estimatedOnlyText:Object(r.e)("TimeTracking|Estimated:")},components:{GlIcon:a.a,GlLink:t.a,GlModal:s.a,TimeTrackingCollapsedState:m,TimeTrackingSpentOnlyPane:O,TimeTrackingComparisonPane:p,TimeTrackingHelpState:b,TimeTrackingReport:T},directives:{GlModal:d.a},props:{timeEstimate:{type:Number,required:!0},timeSpent:{type:Number,required:!0},humanTimeEstimate:{type:String,required:!1,default:""},humanTimeSpent:{type:String,required:!1,default:""},limitToHours:{type:Boolean,default:!1,required:!1},showCollapsed:{type:Boolean,default:!0,required:!1}},data:()=>({showHelp:!1}),computed:{hasTimeSpent(){return Boolean(this.timeSpent)},hasTimeEstimate(){return Boolean(this.timeEstimate)},showComparisonState(){return this.hasTimeEstimate&&this.hasTimeSpent},showEstimateOnlyState(){return this.hasTimeEstimate&&!this.hasTimeSpent},showSpentOnlyState(){return this.hasTimeSpent&&!this.hasTimeEstimate},showNoTimeTrackingState(){return!this.hasTimeEstimate&&!this.hasTimeSpent},showHelpState(){return Boolean(this.showHelp)}},created(){o.a.$on("timeTracker:updateData",this.update)},methods:{toggleHelpState(e){this.showHelp=e},update(e){const{timeEstimate:i,timeSpent:n,humanTimeEstimate:a,humanTimeSpent:t}=e;this.timeEstimate=i,this.timeSpent=n,this.humanTimeEstimate=a,this.humanTimeSpent=t}}},P=Object(c.a)(V,(function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("div",{staticClass:"time-tracker time-tracking-component-wrap",attrs:{"data-testid":"time-tracker"}},[e.showCollapsed?n("time-tracking-collapsed-state",{attrs:{"show-comparison-state":e.showComparisonState,"show-no-time-tracking-state":e.showNoTimeTrackingState,"show-help-state":e.showHelpState,"show-spent-only-state":e.showSpentOnlyState,"show-estimate-only-state":e.showEstimateOnlyState,"time-spent-human-readable":e.humanTimeSpent,"time-estimate-human-readable":e.humanTimeEstimate}}):e._e(),e._v(" "),n("div",{staticClass:"title hide-collapsed gl-mb-3"},[e._v("\n    "+e._s(e.__("Time tracking"))+"\n    "),e.showHelpState?n("div",{staticClass:"close-help-button float-right",attrs:{"data-testid":"closeHelpButton"},on:{click:function(i){return e.toggleHelpState(!1)}}},[n("gl-icon",{attrs:{name:"close"}})],1):n("div",{staticClass:"help-button float-right",attrs:{"data-testid":"helpButton"},on:{click:function(i){return e.toggleHelpState(!0)}}},[n("gl-icon",{attrs:{name:"question-o"}})],1)]),e._v(" "),n("div",{staticClass:"time-tracking-content hide-collapsed"},[e.showEstimateOnlyState?n("div",{attrs:{"data-testid":"estimateOnlyPane"}},[n("span",{staticClass:"gl-font-weight-bold"},[e._v(e._s(e.$options.i18n.estimatedOnlyText)+" ")]),e._v(e._s(e.humanTimeEstimate)+"\n    ")]):e._e(),e._v(" "),e.showSpentOnlyState?n("time-tracking-spent-only-pane",{attrs:{"time-spent-human-readable":e.humanTimeSpent}}):e._e(),e._v(" "),e.showNoTimeTrackingState?n("div",{attrs:{"data-testid":"noTrackingPane"}},[n("span",{staticClass:"gl-text-gray-500"},[e._v(e._s(e.$options.i18n.noTimeTrackingText))])]):e._e(),e._v(" "),e.showComparisonState?n("time-tracking-comparison-pane",{attrs:{"time-estimate":e.timeEstimate,"time-spent":e.timeSpent,"time-spent-human-readable":e.humanTimeSpent,"time-estimate-human-readable":e.humanTimeEstimate,"limit-to-hours":e.limitToHours}}):e._e(),e._v(" "),e.hasTimeSpent?n("gl-link",{directives:[{name:"gl-modal",rawName:"v-gl-modal",value:"time-tracking-report",expression:"'time-tracking-report'"}],staticClass:"btn-link",attrs:{"data-testid":"reportLink",href:"#"}},[e._v(e._s(e.__("Time tracking report")))]):e._e(),e._v(" "),n("gl-modal",{attrs:{"modal-id":"time-tracking-report",title:e.__("Time tracking report"),"hide-footer":!0}},[n("time-tracking-report",{attrs:{"limit-to-hours":e.limitToHours}})],1),e._v(" "),n("transition",{attrs:{name:"help-state-toggle"}},[e.showHelpState?n("time-tracking-help-state"):e._e()],1)],1)],1)}),[],!1,null,null,null);i.a=P.exports},xk0s:function(e,i,n){"use strict";n.d(i,"a",(function(){return t})),n.d(i,"b",(function(){return s})),n.d(i,"c",(function(){return d})),n.d(i,"d",(function(){return r})),n.d(i,"f",(function(){return o})),n.d(i,"e",(function(){return l}));var a=n("/lV4");const t={Closed:"closed",Open:"opened",Reopened:"reopened"},s={[t.Closed]:Object(a.a)("Closed"),[t.Open]:Object(a.a)("Open"),[t.Reopened]:Object(a.a)("Open")},d={Issue:"issue",Epic:"epic",MergeRequest:"merge_request"},r={Close:"CLOSE",Reopen:"REOPEN"},o=Object(a.a)("Published on status page"),l=Object(a.a)("Join Zoom meeting")},zKHu:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueDueDate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDate"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:195}};n.loc.source={body:"query issueDueDate($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    issuable: issue(iid: $iid) {\n      __typename\n      id\n      dueDate\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueDueDate=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var s=a[i]||new Set,d=new Set,r=new Set;for(s.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){d.has(e)||(d.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return d.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueDueDate")},zZPN:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getMrAssignees"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assignees"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"User"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"UserAvailability"},directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:391}};a.loc.source={body:'#import "~/graphql_shared/fragments/user.fragment.graphql"\n#import "~/graphql_shared/fragments/user_availability.fragment.graphql"\n\nquery getMrAssignees($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    issuable: mergeRequest(iid: $iid) {\n      id\n      assignees {\n        nodes {\n          ...User\n          ...UserAvailability\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function s(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)}))}a.definitions=a.definitions.concat(s(n("aBoS").definitions)),a.definitions=a.definitions.concat(s(n("6u3F").definitions));var d={};function r(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.getMrAssignees=function(e,i){var n={kind:e.kind,definitions:[r(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,s=new Set;for(a.forEach((function(e){s.add(e)}));s.size>0;){var o=s;s=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){s.add(e)})))}))}return t.forEach((function(i){var a=r(e,i);a&&n.definitions.push(a)})),n}(a,"getMrAssignees")}}]);
//# sourceMappingURL=commons-pages.dashboard.milestones.show-pages.groups.boards-pages.groups.milestones.show-pages.proje-058f94f5.73a16f64.chunk.js.map